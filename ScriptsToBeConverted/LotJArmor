lotj = lotj or {}
lotj.armor = lotj.armor or {}
lotj.global = lotj.global or {}

function lotj.armor.init()
  lotj.armor.armorList = {}
  lotj.armor.armorPos = 1
  lotj.armor.autoArmor = false
  lotj.armor.enhanceList = {}
  lotj.armor.autoEnhance = false
  lotj.armor.currentEnh = 1
  lotj.armor.autoTransition = false
  lotj.armor.newArmorAuto = false
  lotj.global.afk = false
  lotj.armor.newArmorList = {}
  lotj.armor.currentNewArmor = 1
  cecho("<green>LotJArmor Initialized.\n")
end

function lotj.armor.addArmor(matches)
	lotj.armor.armorList[#lotj.armor.armorList + 1] = matches[2]
	cecho("<lawn_green>'" .. lotj.armor.armorList[#lotj.armor.armorList] .. "' added to armor list.\n")
end

function lotj.armor.removeArmor(matches)
    local armorChoice = matches[2]
        for i, v in ipairs(lotj.armor.armorList) do
            if ((v == armorChoice) or (i == tonumber(armorChoice))) then
                cecho("<lawn_green>Removed '" .. lotj.armor.armorList[i] .. "' index(" .. i .. ") from armor list.\n")
                table.remove(lotj.armor.armorList, i)
                if (lotj.armor.armorPos > i) then  -- if our item is higher in the list than what we remove
                    lotj.armor.armorPos = lotj.armor.armorPos - 1  -- decrement the pointer to follow the current item
            end
        else
            cecho("<tomato>Unable to find specified item in armor list.\n")
        end
    end
end

function lotj.armor.workArmor()
    if (lotj.armor.armorList[lotj.armor.armorPos]) then
        send("makearmor ".. lotj.armor.armorList[lotj.armor.armorPos])
    else
        cecho("<tomato>Armor list empty, aborting!\n")
        lotj.armor.autoWorkOff()
    end
end

function lotj.armor.workStart()
    if (#lotj.armor.armorList > 0) then -- we have stuff to make!
        lotj.armor.armorPos = 0
        lotj.armor.workNextPiece()
        lotj.armor.autoWorkOn()
    else                     -- nothing to make
        cecho("<tomato>Nothing to make!\n")
        lotj.armor.autoWorkOff()
    end
end

function lotj.armor.workNextPiece()
	lotj.armor.armorPos = lotj.armor.armorPos + 1
	if (lotj.armor.armorPos > #lotj.armor.armorList) then  -- reached end of list
		cecho("\n<lawn_green>Armormaking complete.\n")      -- finished
		lotj.armor.autoWorkOff()
	else                                    -- middle of list
		lotj.armor.workArmor()  -- finally, make armor
	end
end

function lotj.armor.autoWorkOn()
    lotj.armor.autoArmor = true
    enableTrigger("AutoArmor")
    cecho("<lawn_green>AutoArmor activated.\n")
end

function lotj.armor.autoWorkOff()
    lotj.armor.autoArmor = false
    disableTrigger("AutoArmor")
    cecho("<tomato>AutoArmor deactivated.\n")
end

function lotj.armor.displayArmorList()
    cecho("<grey>Armor List Contains: \n")
    for i, v in ipairs(lotj.armor.armorList) do
      if (i == lotj.armor.armorPos) then
        cecho("<green>--]>"..v.."<[--\n")
      else
        cecho("<grey>" .. v .. "\n")
      end
    end
end

function lotj.armor.clearArmorList()
	lotj.armor.armorList = {}
	cecho("<lawn_green>Armor list cleared.\n")
	lotj.armor.armorPos = 0
	lotj.armor.autoWorkOff()
end

--Begin Enhance functions

--Need to find a way to combine these.
function lotj.armor.resumeWork()
	if (lotj.global.AFK) then
		send("afk")
	end
	send("bot start")
    if lotj.armor.enhancePos <= #lotj.armor.enhanceList then
        lotj.armor.enhanceArmor()
    else
        lotj.armor.workArmor()
    end
end

function lotj.armor.armorAuto(matches)
    local autoChoice = matches[2]
   if (autoChoice == "on") then
      lotj.armor.autoWorkOn()
   else
      if (autoChoice == "off") then
         lotj.armor.autoWorkOff()
      else
         if(lotj.armor.autoArmor == true) then
            lotj.armor.autoWorkOff()
         else
            lotj.armor.autoWorkOn()
         end
      end
   end
end

function lotj.armor.addEnhancement(newItem, newEnhancement)
	if (newItem == nil or newEnhancement == nil) then
		cecho("<tomato>Invalid arguments given to enhanceadd. Use format 'enhanceadd <armor> <underlay>'.\n")
		return
	end
	local tempEnhance = {
    item = newItem
    enhancement = newEnhancement
    }
    lotj.armor.enhanceList[#lotj.armor.enhanceList+1] = tempEnhance
	cecho("<lawn_green>'" .. lotj.armor.enhanceList[#lotj.armor.enhanceList][1] .. ":" .. lotj.armor.enhanceList[#lotj.armor.enhanceList][2] .. "' added to enhance list.\n")
end

function lotj.armor.clearEnhanceList()
	lotj.armor.enhanceList = {}
	cecho("<lawn_green>Enhance list cleared.\n")
	lotj.armor.enhancePos = 0
	lotj.armor.toggleTransitionOff()
	lotj.armor.toggleEnhanceOff()
end

function lotj.armor.displayEnhanceList()
   cecho("<grey>Enhance List Contains: \n")
   for i, v in ipairs(lotj.armor.enhanceList) do
    if (i == lotj.armor.currentEnh) then
      cecho("<green>--]>"..v[1]..":"..v[2].."<[--\n")
    else
      cecho("<grey>--]>"..v[1]..":"..v[2].."<[--\n")
    end
   end
end

function lotj.armor.enhanceStart()
	if (#lotj.armor.enhanceList > 0) then  -- we have stuff to enhance
		lotj.armor.currentEnh = 0
		lotj.armor.enhanceNext()
		lotj.armor.toggleEnhanceOn()
	else
		cecho("<tomato>Nothing to enhance!\n")
		lotj.armor.toggleEnhanceOff()
	end
end

function lotj.armor.enhanceBadItem()
	if (lotj.armor.autoArmor) then -- We failed an enhancement, remove it from the armor list.
		lotj.armor.removeArmor(lotj.armor.armorPos)
	end
	lotj.armor.enhanceNext() -- move on to next piece to enhance
end

function lotj.armor.enhanceAuto(matches)
    local autoChoice = matches[2]
   if (autoChoice == "on") then
      lotj.armor.toggleEnhanceOn()
   else
      if (autoChoice == "off") then
         lotj.armor.toggleEnhanceOff()
      else
         if(lotj.armor.autoEnhance == true) then
            lotj.armor.toggleEnhanceOff()
         else
            lotj.armor.toggleEnhanceOn()
         end
      end
   end
end

function lotj.armor.enhanceArmor()
	if (lotj.armor.enhanceList[lotj.armor.currentEnh][1]) then
		send("enhancearmor " .. lotj.armor.enhanceList[lotj.armor.currentEnh][1] .. " " .. lotj.armor.enhanceList[lotj.armor.currentEnh][2])
	else
		cecho("<tomato>Enhance list empty, aborting!\n")
		lotj.armor.toggleEnhanceOff()
	end
end

function lotj.armor.enhanceNext()
	lotj.armor.currentEnh = lotj.armor.currentEnh + 1
	if (lotj.armor.currentEnh > #lotj.armor.enhanceList) then -- reached end of list
		cecho("\n<lawn_green>AutoEnhance complete.\n")   -- finished
		lotj.armor.toggleEnhanceOff()
		if (lotj.armor.autoTransition == true) then -- if we're automatically switching to makearmor when done
			lotj.armor.armorStart()
		end
	else
		lotj.armor.enhanceArmor()  -- enhance the armor if we aren't done
	end
end

function lotj.armor.toggleEnhanceOn()
	lotj.armor.autoEnhance = true
	enableTrigger("AutoEnhance")
	cecho("<lawn_green>AutoEnhance activated.\n")
end

function lotj.armor.toggleEnhanceOff()
	lotj.armor.autoEnhance = false
	disableTrigger("AutoEnhance")
	cecho("<tomato>AutoEnhance deactivated.\n")
end


-- Transition from enhance to working
function lotj.armor.toggleTransitionOff()
	lotj.armor.autoTransition = false
	cecho("<slate_grey>AutoTransition deactivated.\n")
end

function lotj.armor.toggleTransitionOn()
	lotj.armor.autoTransition = true
	cecho("<lawn_green>AutoTransition activated.\n")
end

function lotj.armor.transitionAuto(matches)
    local autoChoice = matches[2]
   if (autoChoice == "on") then
      lotj.armor.toggleTransitionOn()
   else
      if (autoChoice == "off") then
         lotj.armor.toggleTransitionOff()
      else
         if(lotj.armor.autoTransition == true) then
            lotj.armor.toggleTransitionOff()
         else
            lotj.armor.toggleTransitionOn()
         end
      end
   end
end

--Begin New Armor functions

function lotj.armor.newArmorAdd(matches)
	--material wearloc cover 'desc' 'restring' underlay coating keyword enhance stitch number
	--davor about cover 'a black suit of armor' none bacta ablative armor yes yes 1
    local newarmor = {
	material = tostring(matches[2]),
	wearloc  = tostring(matches[3]),
	cover    = tostring(matches[4]),
	desc     = tostring(matches[5]),
	restring = tostring(matches[6]),
	underlay = tostring(matches[7]),
	coating  = tostring(matches[8]),
	keyword  = tostring(matches[9]),
	enhance  = tostring(matches[10]),
	work     = tostring(matches[11])
    }
	local keyword = newarmor.keyword
    local numberToAdd = tonumber(matches[12])
	for i=1, tonumber(matches[2]), 1 do
		newarmor.keyword = i .. "." .. keyword
		if ((newarmor.underlay ~= "") and (newarmor.enhance == "yes")) then
            lotj.armor.addEnhancement(newarmor.keyword, newarmor.underlay)
		end
		if ((newarmor.coating ~= "") and (newarmor.enhance == "yes")) then
			lotj.armor.addEnhancement(newarmor.keyword, newarmor.coating)
		end
		if (newarmor.work == "yes") then
			lotj.armor.addArmor(newarmor.keyword)
		end
		lotj.armor.newArmorList[#lotj.armor.newArmorList+1] = newarmor
        cecho("<lawn_green>Added keyword '" .. newarmor.keyword .. "' to New Armor List.\n")
	end
end

function lotj.armor.newArmorStart()
	if (#lotj.armor.newArmorList > 0) then -- we have new armors to make
		lotj.armor.currentNewArmor = 0
		lotj.armor.toggleTransitionOn()
		lotj.armor.toggleNAOn()
		lotj.armor.newArmorNext()
	else
		cecho("<tomato>No new armors to make!\n")
		lotj.armor.toggleNAOff()
	end
   disableTrigger("LotJBulkArmor")
end

function lotj.armor.makeNewArmor()
	if (lotj.armor.newArmorList[lotj.armor.currentNewArmor]) then
		send("makearmor " .. lotj.armor.newArmorList[lotj.armor.currentNewArmor].material .. " " .. lotj.armor.newArmorList[lotj.armor.currentNewArmor].wearloc .. " " .. lotj.armor.newArmorList[lotj.armor.currentNewArmor].cover .. " " .. lotj.armor.newArmorList[lotj.armor.currentNewArmor].desc)
	else
		cecho("<tomato>New Armor Making list empty, aborting!\n")
		lotj.armor.toggleNAOff()
	end
end

function lotj.armor.newArmorNext()
	lotj.armor.currentNewArmor = lotj.armor.currentNewArmor + 1
	if (lotj.armor.currentNewArmor > #lotj.armor.newArmorList) then  -- reached end of list
		cecho("<green>New Armor Making complete.\n")      -- finished
		lotj.armor.toggleNAOff()
		lotj.armor.enhanceStart() -- start enhancing armors
	else 
		lotj.armor.makeNewArmor()  -- finally, make armor
	end
end


function lotj.armor.displayNewArmorList()
	cecho("<slate_gray>New Armor List Contains: \n")
	for k, v in ipairs(lotj.armor.newArmorList) do
		cecho(v.keyword .. ":")
		for ke, va in ipairs(v) do
 			cecho("<slate_grey>  " .. tostring(ke) .. ":" .. tostring(va))
	    end     
   end
end

function lotj.armor.clearNewArmorList()
	lotj.armor.newArmorList = {}
	cecho("<lawn_green>New Armor list cleared.\n")
	lotj.armor.currentNewArmor = 0
	lotj.armor.toggleNAOff()
end

function lotj.armor.toggleNAOn()
	lotj.armor.newArmorAuto = true
	enableTrigger("NewArmor")
	cecho("<lawn_green>New Armor Making Activated.\n")
end

function lotj.armor.toggleNAOff()
	lotj.armor.newArmorAuto = false
	disableTrigger("NewArmor")
	cecho("<tomato>New Armor Making Deactivated.\n")
end

function lotj.armor.clearAllList()
	lotj.armor.clearArmorList()
	lotj.armor.clearEnhanceList()
	lotj.armor.clearNewArmorList()
end

function lotj.armor.displayArmorHelp()
   cecho("<grey>Armor Stitching Commands:\n")
   cecho("<grey>------------------------------\n")
   cecho("<grey>Makearmor           - Resume stitching current item in the list\n")
   cecho("<grey>ArmorStart          - Begin automatic stitching session from front of list\n")
   cecho("<grey>ArmorAdd <item>     - Add an item to the automatic stitching list\n")
   cecho("<grey>ArmorRem <item/#>   - Remove an item from stitching list by name or index number\n")
   cecho("<grey>ArmorList           - Display stitching list contents\n")
   cecho("<grey>ArmorNext           - Skip current item in stitching list\n")
   cecho("<grey>ArmorAuto (on/off)  - Turns automatic stitching on or off\n")
   cecho("<grey>BactaCheck (on/off) - Helps display the amount of bacta contained in armor\n")
   cecho("<grey>ArmorClearAll       - Clear all armor related lists and deactivate all armor scripts\n")
   cecho("<grey>ArmorHelp           - Display this command list\n")
   cecho("<grey>ArmorHelpAll        - Display all armor related command lists\n")
   cecho("<grey>\n")
end

function lotj.armor.displayEnhanceHelp()
   cecho("<grey>Armor Enhancing Commands:\n")
   cecho("<grey>------------------------------")
   cecho("<grey>Enhance                       - Resume enhancing current item in enhance list\n")
   cecho("<grey>EnhanceStart                  - Begin new enhancing session from front of list\n")
   cecho("<grey>EnhanceAdd <armor> <underlay> - Manually add an item to the enhance list\n")
   cecho("<grey>EnhanceList                   - Display enhance list contents\n")
   cecho("<grey>EnhanceClear                  - Clear current Enhance list\n")
   cecho("<grey>EnhanceNext                   - Skip current item in enhance list\n")
   cecho("<grey>EnhanceAuto (on/off)          - Turns automatic enhancing on or off\n")
   cecho("<grey>TransitionAuto (on/off)       - Automatically begins stitching when enhance list is finished\n")
   cecho("<grey>EnhanceHelp                   - Display this command list\n")
   cecho("<grey>\n")
end

function lotj.armor.displayNAHelp(name, line, args)
   cecho("<grey>New Armor Commands:\n")
   cecho("<grey>------------------------------\n")
   cecho("<grey>NewArmorAdd   - Add a new piece of armor to be crafted into the queue. Add armor to the list in the format:\n")
   cecho("<grey>                naaddm material wearloc cover 'desc' 'restring' underlay coating keyword enhance stitch number\n")
   cecho("<grey>NewArmorStart - Begin crafting new armors from start of queue, automatically moving on to enhancing and stitching\n")
   cecho("<grey>NewArmorList  - Display contents of armors to be crafted\n")
   cecho("<grey>NewArmorClear - Clear current list of new armors to be crafted\n")
   cecho("<grey>NewArmorHelp  - Show this command list\n")
   cecho("<grey>\n")
end

function lotj.armor.displayAllHelp()
	lotj.armor.displayArmorHelp()
	lotj.armor.displayEnhanceHelp()
	lotj.armor.displayNAHelp()
end